1 - Como você define automação de testes e por que é importante em um projeto de software?
R: Automação de teste é o processo de utilizar software para executar testes de forma automatizada em um sistema ou aplicação, em vez de executá-los manualmente. A automação de teste envolve a criação de scripts e ferramentas que simulem a interação de um usuário com o software e executem testes em diferentes cenários e condições.
Ela é útil porque ajuda a aumentar a eficiência e a qualidade dos testes, além de permitir que os testes sejam executados de forma mais rápida e consistente. Aumento da cobertura de testes dos sistemas. criação rapida de massa de dados, economia de tempo.

2 - Quais são as principais diferenças entre testes funcionais e testes de unidade?
R:  Os testes de unidade têm como objetivo garantir que cada parte do código está funcionando corretamente individualmente, enquanto os testes funcionais visam verificar se o sistema como um todo está atendendo aos requisitos do usuário e funcionando de forma adequada.

3 - Como você aborda a identificação e resolução de defeitos em um projeto?
R:  Coletar informações sobre o defeito, como a descrição do problema, os resultados esperados e os resultados observados, as etapas para reproduzir o defeito e as informações do ambiente de teste. Reproduzir o defeito no ambiente de teste.  Anlise do defeito, tentar identificar a causa raiz e a possivel solução

4 - Quais ferramentas de automação de testes você já utilizou? E qual você acha que é a melhor para sua necessidade?
R: Ja trabalhei com Robot-framework, Selenium e Orange (low-code), A que mais estou abituado é o Robot framewor que tem uma abordagem por keywords e consegue abranger tanto UI quando API.

5 - Como você gerencia seus casos de testes e resultados?
Os casos de teste deve ser agrupados por tipo, como UI, API e depois por Modulos, estes casos devem estar escritos de acordo com os requisitos e guardados em um ferramenta de gerenciamento de testes como o Jira com zephyr. Os resultados devem ser matidos para analises e indicadores de qualidade.

6 - Como você lida com situações de pressão e prazos apertados?
R:  priorizar tarefas, comunicar-se com a equipe, focar no resultado final, simplificar os testes, ser flexível, utilizar ferramentas de automação de teste e gerenciar o tempo de forma eficiente.

7 - Você já trabalhou em equipes ágeis? Como foi sua experiência?
R: Sim, ja trabalhei com o framework Scrum, teve um almento significativo da produtividade e o engajamento do time.

8 - Como você se mantém atualizado com as tendências e tecnologias de teste?
R: Com aprendizado continuo o lifelong learning, grupos do Linkedin, Podcasts como o Compiladondo, Akita, Ripster.tech, livros.

9 - Qual é a sua experiência com integração contínua e entrega contínua?
R: No processo que faço hoje não é automatizado, realizamos tanto a atualização de ambientes com as novas alterações quanto a execução de forma manual. Tenho conhecimento sobre o assunto e algumas ferramentas que são utilizadas como o GitLab para o integração contínua (CI) e Jenkis para entrega contínua (CD)

10 - Quais são as principais habilidades que você acredita que um SDET deve ter?
* Conhecimento de programação.
* Conhecimento de testes de software.
* Habilidade em automação de testes.
* Habilidade em gerenciamento de dados.
* Habilidade em análise de código.
* Habilidade em depuração.
* Habilidade em colaboração.
* Habilidade em gerenciamento de projeto.
* Conhecimento de ferramentas de gerenciamento de projeto e rastreamento de bugs.
* Habilidade em aprendizado contínuo.